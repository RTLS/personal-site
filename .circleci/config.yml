# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2.1
jobs:
  Build-Test:
    environment:
      POSTGRES_DB: circle
      POSTGRES_USER: root
      POSTGRES_PASSWORD: circleci_test
      MIX_ENV: test
      CI: true

    docker:
      # specify the version here
      - image: circleci/elixir:1.10.2
      - image: circleci/redis:4
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: circleci_test

    working_directory: ~/woven
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Install Hex & Rebar
          command: |
            mix do local.hex --force, local.rebar --force
            mix hex.info | awk '/^Elixir:/ {print $2}' > .elixir.version
            echo "Elixir version $(cat .elixir.version)"

      - run: mix do deps.get, compile --warnings-as-errors
      - run: mix do ecto.drop, ecto.create, ecto.migrate
      - run: mix ecto.create
      - run: mix test

  Build-Release:
    environment:
        MIX_ENV: prod

    docker:
      # specify the version here
      - image: cpedersen/woven:release
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: circleci_test

    steps:
      - checkout
      - run:
          name: Install Hex & Rebar
          command: |
            mix do local.hex --force, local.rebar --force
            mix hex.info | awk '/^Elixir:/ {print $2}' > .elixir.version
            echo "Elixir version $(cat .elixir.version)"

      - run: mix do deps.get, compile
      - run: mix release
      - run: tar -czvf personal_site.tar.gz _build/prod/rel/personal_site/
      - aws-s3/copy:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: personal_site.tar.gz
          to: 's3://personal-site-releases'

orbs:
  aws-s3: circleci/aws-s3@1.0.15

workflows:
  version: 2
  build_test_deployS3:
    jobs:
      # - Build-Test
      - Build-Release:
          filters:
            branches:
              only:
                - master
